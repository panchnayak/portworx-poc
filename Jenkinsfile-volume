pipeline {
    agent any
    stages {
        stage('Setup Cassandra Parameters') {
            steps {
                script {
                    properties([
                        parameters([
                            choice(choices: ['Default: Do Nothing','Deploy-Portworx-Volume', 'Delete-Portworx-Volume'],name: 'REQUESTED_ACTION'),
                            string(defaultValue: 'pnayak-aws',name: 'AWS_CREDS',trim: true),
                            string(defaultValue: 'us-east-2',name: 'REGION_NAME',trim: true)
                        ])
                    ])
                }
            }
        }
        stage ('Deploy or Destroy Cassandra'){
          parallel {
              stage('Deploy Cassandra DB on Portworx Cluster') {
                when { expression { params.REQUESTED_ACTION == 'Deploy-Portworx-Volume'  }  }
                  steps {
                    withAWS(credentials: params.AWS_CREDS, region: params.REGION_NAME) {
                      echo "Creating a portworx volume named "
                      sh "./scripts/portworx/create-volume.sh"
                    }
                  }
              }
              stage('Uninstall Cassndra DB fron Portworx Cluster') {
                when { expression { params.REQUESTED_ACTION == 'Delete-Portworx-Volume'  }  }
                steps {
                  withAWS(credentials: params.AWS_CREDS, region: params.REGION_NAME) {
                      echo "Deleting portworx volume named"
                      sh "./scripts/portworx/delete-volume.sh"
                  }
                }
              }
          }
        }
    }
}