pipeline {
    agent  any
    stages {
        stage('Setup parameters') {
            steps {
                script {
                    properties([
                        parameters([
                            choice(choices: ['Default: Do Nothing', 'Deploy Portworx Cluster', 'Destroy Portworx Cluster'],name: 'ACTION_REQUESTING'),
                            string(defaultValue: 'pnayak-aws',name: 'AWS_CREDENTIAL',trim: true),
                            string(defaultValue: 'pn-eks',name: 'CLUSTER_NAME',trim: true),
                            string(defaultValue: 'us-east-2',name: 'REGION_NAME',trim: true),
                            string(defaultValue: 'portworx',name: 'PORTWORX_NAMESPACE',trim: true),
                            string(defaultValue: 'https://raw.githubusercontent.com/panchnayak/portworx-poc/main/scripts/portworx/eks-px-cluster-specs.yaml',name: 'PORTWORX_SPECS_URL',trim: true),
                        ])
                    ])
                }
            }
        }
        stage ('Deploy or Destroy PortWorx Cluster') {
            parallel {
                stage('Deploy Portworx Storage Cluster') {
                        when { expression { params.ACTION_REQUESTING == 'Deploy Portworx Cluster'  }  }
                        steps {
                            withAWS(credentials: params.AWS_CREDENTIAL, region: params.REGION_NAME) {
                                echo "Deploy Portworx Operator on the EKS Cluster"
                                sh "kubectl create ns "+ params.PORTWORX_NAMESPACE
                                sh "kubectl apply -f 'https://install.portworx.com/2.12?comp=pxoperator&ns="+params.PORTWORX_NAMESPACE+"'"
                                sh "kubectl get pods -n "+ params.PORTWORX_NAMESPACE
                                echo "Applying the Portworx Specification provided in the GITHUB URLs for your Kubernetes Cluster"
                                sh "sleep 10s"
                                sh "kubectl apply -f "+ params.PORTWORX_SPECS_URL
                                sh "sleep 10s"
                                sh "kubectl get pods -n "+ params.PORTWORX_NAMESPACE
                                sh "sleep 10s"
                                sh "kubectl get pods -n "+ params.PORTWORX_NAMESPACE
                            }
                        }
                }
                stage('Destroy Portworx Cluster') {
                        when { expression { params.ACTION_REQUESTING == 'Destroy Portworx Cluster'  }  }
                        steps {
                            withAWS(credentials: params.AWS_CREDENTIAL, region: params.REGION_NAME) {
                                echo "Deleting Portworx on the EKS Cluster"
                                sh "kubectl delete -f "+ params.PORTWORX_SPECS_URL
                                sh "sleep 1m"
                                sh "kubectl delete -f 'https://install.portworx.com/2.12?comp=pxoperator&ns="+params.PORTWORX_NAMESPACE+"'"
                                sh "kubectl delete ns "+ params.PORTWORX_NAMESPACE
                            }
                        }
                }
            }
        }
    }
}
       
