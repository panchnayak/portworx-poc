pipeline {
    agent  any
    stages {
        stage('Setup parameters') {
            steps {
                script {
                    properties([
                        parameters([
                            choice(choices: ['Default: Do Nothing', 'Deploy Portworx Cluster', 'Destroy Portworx Cluster'],name: 'ACTION_REQUESTING'),
                            string(defaultValue: 'pnayak-aws',name: 'AWS_CREDENTIAL',trim: true),
                            string(defaultValue: 'pn-eks',name: 'CLUSTER_NAME',trim: true),
                            string(defaultValue: 'pn-px-ng',name: 'NODEGROUP_NAME',trim: true),
                            string(defaultValue: 'us-east-2',name: 'REGION_NAME',trim: true),
                        ])
                    ])
                }
            }
        }
        stage ('Deploy or Destroy PortWorx Cluster') {
            parallel {
                stage('Deploy Portworx Storage Cluster') {
                        when { expression { params.ACTION_REQUESTING == 'Deploy Portworx Cluster'  }  }
                        steps {
                            withAWS(credentials: params.AWS_CREDENTIAL, region: params.REGION_NAME) {
                                echo "Installing Portworx on the EKS Cluster"
                                sh "kubectl apply -f ./portworx/px-operator.yaml'"
                                sh "kubectl apply -f ./portworx/eks-px-cluster-specs.yaml"
                            }
                        }
                }
                stage('Destroy Portworx Cluster') {
                        when { expression { params.ACTION_REQUESTING == 'Destroy Portworx Cluster'  }  }
                        steps {
                            withAWS(credentials: params.AWS_CREDENTIAL, region: params.REGION_NAME) {
                                echo "Deleting Portworx on the EKS Cluster"
                                sh "kubectl delete -f ./portworx/eks-px-cluster-specs.yaml"
                                sh "kubectl delete -f ./portworx/px-operator.yaml"
                            }
                        }
                }
            }
        }
    }
}
       
