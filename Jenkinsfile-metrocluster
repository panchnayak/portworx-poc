pipeline {
    agent any
    stages {
        stage('Setup Parameters') {
            steps {
                script {
                    properties([
                        parameters([
                            string(
                                defaultValue: 'aws-pnayak',
                                name: 'AWS_CREDS',
                                trim: true
                            ),
                            choice(
                                choices: ['Default: Do Nothing', 'Deploy Metro Cluster', 'Migrate App from Source to Destination'],
                                name: 'ACTION_REQUESTING'
                            ),
                            string(
                                defaultValue: 'pnayak-eks',
                                name: 'CLUSTER_NAME',
                                trim: true
                            ),
                            string(
                                defaultValue: 'pnayak-eks-ng',
                                name: 'NODEGROUP_NAME',
                                trim: true
                            ),
                            string(
                                defaultValue: 'us-east-1',
                                name: 'FIRST_REGION_NAME',
                                trim: true
                            )
                        ])
                    ])
                }
            }
        }
        stage('Create ETCD Cluster') {
            when { expression { params.ACTION_REQUESTING == 'Deploy Metro Cluster'  }  }
            steps {
                sh "aws ec2 describe-instances"
              }
            }
        } 

        stage('Verify Cluster Pair Status') {
            when { expression { params.ACTION_REQUESTING == 'Deploy Metro Cluster' }  }
                steps {
                    withAWS(credentials: params.AWS_CREDS, region: params.FIRST_REGION_NAME) {
                        echo "Deploying EKS Cluster "+params.CLUSTER_NAME+"1 in the region "+ params.FIRST_REGION_NAME
                        
                    }
                }
        }
    }
}
        
        
              
